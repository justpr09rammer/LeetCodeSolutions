
class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int maxx = 0;
        int sum = 0;
        for (int weight : weights) {
            maxx = Math.max(maxx, weight);
            sum += weight;
        }
        int lowerBound = maxx;
        int result = Integer.MAX_VALUE;
        int upperBound = sum;
        while (lowerBound <= upperBound) {
            //System.out.println("lowerBound: " + lowerBound + " upperBound: " + upperBound);
            int weightGuess = lowerBound + (upperBound - lowerBound) / 2;
            //System.out.println();
            //System.out.println();
            //System.out.println("when weight guess ----------->  " + weightGuess);
            int temp = 0;
            int day = 1;
            for (int weight : weights) {
                if (weight + temp > weightGuess) {
                    day += 1;
                    temp = 0;
                }
                temp += weight;
                //System.out.println("day " + day + " ----->  " + weight);
            }
            //System.out.println("all can be carried? " + allCanBeCarried);
            if (day <= days){
                result = Math.min(result, weightGuess);
                upperBound = weightGuess - 1;
            }
            else {
                lowerBound = weightGuess + 1;
            }
            }
            //System.out.println(result);
            //System.out.println();
            //System.out.println();
        
        return result;
    }
}

